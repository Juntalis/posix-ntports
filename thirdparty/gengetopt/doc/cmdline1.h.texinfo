@c Generator: GNU source-highlight, by Lorenzo Bettini, http://www.gnu.org/software/src-highlite
@smallexample
@r{@i{/* cmdline1.h */}}

@r{@i{/* File autogenerated by gengetopt version 2.20  */}}

@b{#ifndef} CMDLINE1_H
@b{#define} CMDLINE1_H

@r{@i{/* If we use autoconf.  */}}
@b{#ifdef} HAVE_CONFIG_H
@b{#include} @t{"config.h"}
@b{#endif}

@b{#ifdef} __cplusplus
@b{extern} @t{"C"} @{
@b{#endif} @r{@i{/* __cplusplus */}}

@b{#ifndef} CMDLINE_PARSER_PACKAGE
@b{#define} CMDLINE_PARSER_PACKAGE @t{"sample1"}
@b{#endif}

@b{#ifndef} CMDLINE_PARSER_VERSION
@b{#define} CMDLINE_PARSER_VERSION @t{"2.0"}
@b{#endif}

@b{struct} @b{gengetopt}_args_info
@{
  @b{const} @b{char} *help_help; @r{@i{/* Print help and exit help description.  */}}
  @b{const} @b{char} *full_help_help; @r{@i{/* Print help, including hidden options, and exit help description.  */}}
  @b{const} @b{char} *version_help; @r{@i{/* Print version and exit help description.  */}}
  @b{char} * str_opt_arg;       @r{@i{/* A string option, for a filename.  */}}
  @b{char} * str_opt_orig;       @r{@i{/* A string option, for a filename original value given at command line.  */}}
  @b{const} @b{char} *str_opt_help; @r{@i{/* A string option, for a filename help description.  */}}
  @b{int} my_opt_arg;       @r{@i{/* Another integer option, this time the description of the option should be \"quite\" long to require wrapping... possibly more than one wrapping :-) especially if I\nrequire a line break.  */}}
  @b{char} * my_opt_orig;       @r{@i{/* Another integer option, this time the description of the option should be \"quite\" long to require wrapping... possibly more than one wrapping :-) especially if I\nrequire a line break original value given at command line.  */}}
  @b{const} @b{char} *my_opt_help; @r{@i{/* Another integer option, this time the description of the option should be \"quite\" long to require wrapping... possibly more than one wrapping :-) especially if I\nrequire a line break help description.  */}}
  @b{int} int_opt_arg;       @r{@i{/* A int option.  */}}
  @b{char} * int_opt_orig;       @r{@i{/* A int option original value given at command line.  */}}
  @b{const} @b{char} *int_opt_help; @r{@i{/* A int option help description.  */}}
  @b{int} flag_opt_flag;       @r{@i{/* A flag option (default=off).  */}}
  @b{const} @b{char} *flag_opt_help; @r{@i{/* A flag option help description.  */}}
  @b{const} @b{char} *funct_opt_help; @r{@i{/* A function option help description.  */}}
  @b{long} long_opt_arg;       @r{@i{/* A long option.  */}}
  @b{char} * long_opt_orig;       @r{@i{/* A long option original value given at command line.  */}}
  @b{const} @b{char} *long_opt_help; @r{@i{/* A long option help description.  */}}
  @b{char} * def_opt_arg;       @r{@i{/* A string option with default (default='Hello').  */}}
  @b{char} * def_opt_orig;       @r{@i{/* A string option with default original value given at command line.  */}}
  @b{const} @b{char} *def_opt_help; @r{@i{/* A string option with default help description.  */}}
  @b{char} * enum_opt_arg;       @r{@i{/* A string option with list of values (default='hello').  */}}
  @b{char} * enum_opt_orig;       @r{@i{/* A string option with list of values original value given at command line.  */}}
  @b{const} @b{char} *enum_opt_help; @r{@i{/* A string option with list of values help description.  */}}
  @b{int} secret_arg;       @r{@i{/* hidden option will not appear in --help.  */}}
  @b{char} * secret_orig;       @r{@i{/* hidden option will not appear in --help original value given at command line.  */}}
  @b{const} @b{char} *secret_help; @r{@i{/* hidden option will not appear in --help help description.  */}}
  @b{int} dependant_arg;       @r{@i{/* option that depends on str-opt.  */}}
  @b{char} * dependant_orig;       @r{@i{/* option that depends on str-opt original value given at command line.  */}}
  @b{const} @b{char} *dependant_help; @r{@i{/* option that depends on str-opt help description.  */}}
  
  @b{int} help_given ;       @r{@i{/* Whether help was given.  */}}
  @b{int} full_help_given ;       @r{@i{/* Whether full-help was given.  */}}
  @b{int} version_given ;       @r{@i{/* Whether version was given.  */}}
  @b{int} str_opt_given ;       @r{@i{/* Whether str-opt was given.  */}}
  @b{int} my_opt_given ;       @r{@i{/* Whether my-opt was given.  */}}
  @b{int} int_opt_given ;       @r{@i{/* Whether int-opt was given.  */}}
  @b{int} flag_opt_given ;       @r{@i{/* Whether flag-opt was given.  */}}
  @b{int} funct_opt_given ;       @r{@i{/* Whether funct-opt was given.  */}}
  @b{int} long_opt_given ;       @r{@i{/* Whether long-opt was given.  */}}
  @b{int} def_opt_given ;       @r{@i{/* Whether def-opt was given.  */}}
  @b{int} enum_opt_given ;       @r{@i{/* Whether enum-opt was given.  */}}
  @b{int} secret_given ;       @r{@i{/* Whether secret was given.  */}}
  @b{int} dependant_given ;       @r{@i{/* Whether dependant was given.  */}}

  @b{char} **inputs ; @r{@i{/* unamed options */}}
  @b{unsigned} inputs_num ; @r{@i{/* unamed options number */}}
@} ;

@b{extern} @b{const} @b{char} *gengetopt_args_info_purpose;
@b{extern} @b{const} @b{char} *gengetopt_args_info_usage;
@b{extern} @b{const} @b{char} *gengetopt_args_info_help[];
@b{extern} @b{const} @b{char} *gengetopt_args_info_full_help[];

@b{int} cmdline_parser (@b{int} argc, @b{char} * @b{const} *argv,
  @b{struct} @b{gengetopt}_args_info *args_info);
@b{int} cmdline_parser2 (@b{int} argc, @b{char} * @b{const} *argv,
  @b{struct} @b{gengetopt}_args_info *args_info,
  @b{int} override, @b{int} initialize, @b{int} check_required);
@b{int} cmdline_parser_file_save(@b{const} @b{char} *filename,
  @b{struct} @b{gengetopt}_args_info *args_info);

@b{void} cmdline_parser_print_help(@b{void});
@b{void} cmdline_parser_print_full_help(@b{void});
@b{void} cmdline_parser_print_version(@b{void});

@b{void} cmdline_parser_init (@b{struct} @b{gengetopt}_args_info *args_info);
@b{void} cmdline_parser_free (@b{struct} @b{gengetopt}_args_info *args_info);

@b{int} cmdline_parser_required (@b{struct} @b{gengetopt}_args_info *args_info,
  @b{const} @b{char} *prog_name);

@b{extern} @b{char} *cmdline_parser_enum_opt_values[] ;       @r{@i{/* Possible values for enum-opt.  */}}


@b{#ifdef} __cplusplus
@}
@b{#endif} @r{@i{/* __cplusplus */}}
@b{#endif} @r{@i{/* CMDLINE1_H */}}

@end smallexample